--------test1.txt--------
6 6 2
* * * * * *
* * * * * *
* * * * * *
* * * * * *
* * * * * *
* * * * * *

This test case tests the rock nodes.
If there are no ice nodes and all rocks,
then the result list consists of 0 nodes.
The output of this test case is:

    Enter the name of the test file : test1.txt
        There is no way to GET OFF THE ICE !!

--------test2.txt--------
5 5 7
. . * . .
. . . . .
. . . . .
. . . * .
. * . . .

This test case tests the escape node.
If the escape node is out of the pond, i.e, here
it is 7 whereas the height and width of the pond is 5.
So, the program exits and give output:

        Enter the name of the test file : test2.txt
         There is NO escape from this Ice!!

--------test3.txt--------
5 5 4
. . * * *
* . . * *
* * . . *
* * * . .
* * * * .

This test case tests the ice and rock nodes.
If there are very few ice nodes and more of rocks,
then the result list consists of very few nodes.
The output of this test case is:

        Enter the name of the test file : test3.txt
           1 : ['43', '44']
           2 : ['33']
           3 : ['32']
           4 : ['22']
           5 : ['21']
           6 : ['11']
           7 : ['10']
           8 : ['00']

--------test0.txt--------
5 5 1
. . * . .
. . . . .
. . . . .
. . . * .
. * . . .

This test case is given in the assignment.
This test case tests the shortest path algorithm.
There is more than one way to escape from a node, but the
program selects the shortest path.
The output of this test case is:
    Enter the name of the test file : test0.txt
        1 : ['01', '11', '21', '31', '41']
        2 : ['24', '22', '23']
        3 : ['13', '44', '03', '34']
        4 : ['10', '40', '42', '12', '43']
        5 : ['00', '30', '32', '02']
        6 : ['04']